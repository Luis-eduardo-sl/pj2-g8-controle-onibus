generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cliente {
  id_cliente Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(100)
  token      String?   @db.VarChar(45)
  email      String?   @db.VarChar(200)
  senha      String?   @db.VarChar(535)
  usuario    usuario[]
}

model linha {
  id_linha     Int       @id @default(autoincrement())
  nome         String?   @db.VarChar(200)
  inicio       DateTime? @db.DateTime(0)
  termino      DateTime? @db.DateTime(0)
  rota         String?   @db.VarChar(2000)
  freq_semanal String?   @db.VarChar(45)
  viagem       viagem[]
}

model motorista {
  id_motorista Int      @id @default(autoincrement())
  nome         String?  @db.VarChar(200)
  cpf          String?  @db.VarChar(14)
  telefone     String?  @db.VarChar(14)
  email        String?  @db.VarChar(200)
  foto         String?  @db.VarChar(200)
  observacoes  String?  @db.VarChar(535)
  viagem       viagem[]
}

model onibus {
  id_onibus   Int      @id @default(autoincrement())
  placa       String?  @db.VarChar(7)
  modelo      String?  @db.VarChar(45)
  capacidade  String?  @db.VarChar(45)
  observacoes String?  @db.VarChar(535)
  viagem      viagem[]
}

model usuario {
  id_usuario         Int                  @id @default(autoincrement())
  nome               String?              @db.VarChar(100)
  telefone           String?              @db.VarChar(14)
  email              String?              @db.VarChar(200)
  cpf                String?              @db.VarChar(14)
  senha              String?              @db.VarChar(535)
  carteirinha        String?              @db.VarChar(535)
  observacoes        String?              @db.VarChar(535)
  saldo              Decimal?             @db.Decimal(10, 2)
  tipo               String               @default("comum") @db.VarChar(20)
  cliente_id         Int?
  cartao_id          String?              @db.VarChar(200)
  cliente            cliente?             @relation(fields: [cliente_id], references: [id_cliente], onDelete: NoAction, onUpdate: NoAction, map: "FK_CLIENTE")
  viagem_has_usuario viagem_has_usuario[]

  @@index([cliente_id], map: "FK_CLIENTE")
}

model viagem {
  id_viagem          Int                  @id @default(autoincrement())
  inicio             DateTime?            @db.DateTime(0)
  duracao            DateTime?            @db.DateTime(0)
  linha_id           Int
  motorista_id       Int
  onibus_id          Int
  linha              linha                @relation(fields: [linha_id], references: [id_linha], onUpdate: Restrict, map: "FK_LINHA")
  motorista          motorista            @relation(fields: [motorista_id], references: [id_motorista], onUpdate: Restrict, map: "FK_MOTORISTA")
  onibus             onibus               @relation(fields: [onibus_id], references: [id_onibus], onUpdate: Restrict, map: "FK_ONIBUS")
  viagem_has_usuario viagem_has_usuario[]

  @@index([linha_id], map: "FK_LINHA")
  @@index([motorista_id], map: "FK_MOTORISTA")
  @@index([onibus_id], map: "FK_ONIBUS")
}

model viagem_has_usuario {
  tarifa                Decimal? @db.Decimal(10, 2)
  data                  DateTime @db.Date
  viagem_id             Int
  usuario_id            Int
  id_viagem_has_usuario Int      @id
  usuario               usuario  @relation(fields: [usuario_id], references: [id_usuario], onUpdate: Restrict, map: "FK_USUARIO")
  viagem                viagem   @relation(fields: [viagem_id], references: [id_viagem], onUpdate: Restrict, map: "FK_VIAGEM")

  @@index([usuario_id], map: "FK_USUARIO")
  @@index([viagem_id], map: "FK_VIAGEM")
}

model comentario {
  id_comentario Int     @id @default(autoincrement())
  texto         String? @db.VarChar(2000)
  email         String? @db.VarChar(200)
  nome          String? @db.VarChar(100)
}
